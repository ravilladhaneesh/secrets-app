# # HTTP Block: Redirect HTTP requests to HTTPS
# server {
#     listen 80;
#     server_name securethem.com www.securethem.com;    

#     return 301 https://$host:443$request_uri;
   
# }

# # HTTPS Block: Handle HTTPS traffic and proxy it to the backend
# server {
#     listen 443 ssl;
#     server_name securethem.com www.securethem.com;

#     ssl_certificate /etc/nginx/certs/domain.cert.pem;
#     ssl_certificate_key /etc/nginx/certs/private.key.pem;

#     # SSL settings


#     location / {
#         proxy_pass http://flask-app:5000;  # Your backend app is running on HTTP (e.g., localhost:5000)
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;  # Use X-Forwarded-Proto from ALB
#         proxy_set_header X-Forwarded-Port 443;  # Indicate the original port (HTTPS)
#         proxy_set_header X-Forwarded-Host $host;

#         # Optional: Add buffer and timeout settings for proxy
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#         proxy_buffer_size 128k;
#         proxy_buffers 4 256k;
#         proxy_busy_buffers_size 256k;
#         proxy_max_temp_file_size 0;
#     }
# }


# FOR EC2 INSTANCE

server {
    listen 443 ssl;
    server_name securethem.com www.securethem.com;

    ssl_certificate /etc/nginx/certs/domain.cert.pem;
    ssl_certificate_key /etc/nginx/certs/private.key.pem;

    # SSL settings


    location / {
        proxy_pass http://flask-app:5000;  # Your backend app is running on HTTP (e.g., localhost:5000)
        proxy_set_header Host $host;  # Keeps the original host header for routing
        proxy_set_header X-Real-IP $remote_addr;  # Passes the original client IP
        proxy_set_header X-Forwarded-For $remote_addr;  # Same as X-Real-IP in your case
        proxy_set_header X-Forwarded-Proto $scheme;  # Use $scheme to indicate if it's HTTP/HTTPS
        proxy_set_header X-Forwarded-Port 443;  # Port 443 if you're handling HTTPS directly
        proxy_set_header X-Forwarded-Host $host;  # Passes the original host (useful for logging)


        # # Optional: Add buffer and timeout settings for proxy
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
        # proxy_buffer_size 128k;
        # proxy_buffers 4 256k;
        # proxy_busy_buffers_size 256k;
        # proxy_max_temp_file_size 0;
    }
}



